{"version":3,"sources":["Components/Graph.js","Components/Jsonpreview.js","Components/Controls.js","Components/Container.js","App.js","serviceWorker.js","index.js"],"names":["Graph","renderChart","data","_this","props","json","yExtent","fc","accessors","d","high","low","xExtent","date","gridlines","candlestick","multi","series","chart","d3","yDomain","xDomain","plotArea","datum","call","exportImg","this","react_default","a","createElement","id","onClick","className","React","Component","JsonPreview","state","editable","dateReviver","k","v","Date","stripHTML","html","DOMParser","parseFromString","body","textContent","editJson","JSON","parse","document","getElementById","innerHTML","err","alert","setState","style","background","contentEditable","update","stringify","Controls","open","close","volume","dateCount","handleRandDay","today","nextDay","setDate","getDate","length","generator","startDate","rand","concat","handleDelRecord","e","newJson","handleAddRecord","preventDefault","newRec","refs","value","Number","parseFloat","o","h","l","c","Object","toConsumableArray","handleReset","componentDidMount","nextDate","day","slice","month","getMonth","newDay","getFullYear","handleJsonUpdate","handleBadDay","datalen","random","badDay","handleGoodDay","goodDay","now","key","label","ref","type","placeholder","Graph_Graph","Jsonpreview_JsonPreview","Container","Controls_Controls","App","Components_Container","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.57e7e337.chunk.js","sourcesContent":["import React from 'react';\nimport * as fc from \"d3fc\";\nimport * as d3 from \"d3\";\n\nexport default class Graph extends React.Component {\n  renderChart = () => {\n    var data = this.props.json;\n\n    var yExtent = fc.extentLinear()\n                    .accessors([function(d) {return d.high;}, function(d) {return d.low;}])\n\n\n    var xExtent = fc.extentTime()\n                    .accessors([function(d) {return d.date;}])\n\n    var gridlines = fc.annotationSvgGridline();\n    var candlestick = fc.seriesSvgCandlestick();\n    var multi = fc.seriesSvgMulti().series([gridlines, candlestick]);\n    \n    var chart = fc\n      .chartSvgCartesian(\n        fc.scaleDiscontinuous(d3.scaleTime()),\n        d3.scaleLinear()\n      )\n      .yDomain(yExtent(data))\n      .xDomain(xExtent(data))\n      .plotArea(multi)\n\n    d3.selectAll(\"#chart\")\n      .datum(data)\n      .call(chart);\n  };\n\n  componentDidMount() {\n    this.renderChart();\n  }\n\n  componentDidUpdate() {\n    this.renderChart();\n  }\n\n  exportImg = () => {\n\n  }\n\n  render() {\n    return (\n      <div id=\"graph\">\n        <h3>Graph\n          <button\n            onClick={this.exportImg}\n            id=\"editbtn\"\n            className=\"btn btn-outline-success btnJsonEdit\"\n          >\n            Save\n          </button>\n        </h3>\n        <hr />\n        <div id=\"chart\" />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class JsonPreview extends React.Component {\n  state = {\n    editable: false\n  };\n\n  dateReviver = (k, v) => {\n    if (k === \"date\") {\n      return new Date(v);\n    }\n    return v;\n  };\n\n  stripHTML = html => {\n    var doc = new DOMParser().parseFromString(html, \"text/html\");\n    return doc.body.textContent || \"\";\n  };\n\n  editJson = () => {\n    try {\n      var json = JSON.parse(\n        document.getElementById(\"jsoncode\").innerHTML,\n        this.dateReviver\n      );\n    } \n    catch (err) {\n      alert(err);\n      return;\n    }\n\n    this.setState({\n      editable: !this.state.editable\n    });\n\n    this.state.editable\n      ? (document.getElementById(\"jsoncode\").style.background = \"#eff\")\n      : (document.getElementById(\"jsoncode\").style.background = \"#bff\");\n\n    document.getElementById(\"jsoncode\").contentEditable = !this.state.editable;\n    this.props.update(json);\n  };\n\n  render() {\n    return (\n      <div id=\"json\">\n        <h3>\n          JSON\n          {this.state.editable ? (\n            <button\n              onClick={this.editJson}\n              id=\"editbtn\"\n              className=\"btn btn-outline-danger btnJsonEdit\"\n            >\n              Apply\n            </button>\n          ) : (\n            <button\n              onClick={this.editJson}\n              id=\"editbtn\"\n              className=\"btn btn-outline-primary btnJsonEdit\"\n            >\n              Edit\n            </button>\n          )}\n        </h3>\n        <hr />\n        <div className=\"json\">\n          <pre id=\"jsoncode\">\n            {JSON.stringify(this.props.json, null, 2)}\n          </pre>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Graph from './Graph'\nimport JsonPreview from './Jsonpreview'\nimport * as fc from \"d3fc\";\n\n\nexport default class Controls extends React.Component {\n  state = {\n    json: [],\n    date: \"\",\n    open: 0,\n    high: 0,\n    low: 0,\n    close: 0,\n    volume: 0,\n    dateCount: 1\n  };\n\n  componentWillUnmount() {}\n\n  componentDidMount() {\n    var now = new Date();\n    var day = (\"0\" + now.getDate()).slice(-2);\n    var month = (\"0\" + (now.getMonth() + 1)).slice(-2);\n    var today = now.getFullYear() + \"-\" + month + \"-\" + day;\n\n    document.getElementById(\"date\").value = today;\n\n    this.setState({\n      date: this.refs.o.value\n    });\n  }\n\n  handleRandDay = () => {\n    var today = new Date();\n    var nextDay = new Date();\n    \n    nextDay.setDate(today.getDate() + this.state.json.length);\n    \n    const generator = fc.randomFinancial().startDate(nextDay);\n    \n    var rand = this.state.json.concat(generator(1));\n\n    this.setState({\n      json: rand\n    });\n  };\n\n  handleDelRecord = e => {\n    if (this.state.json.length > 0) {\n      let newJson = this.state.json;\n      newJson.length = this.state.json.length - 1;\n\n      this.setState({\n        json: newJson\n      });\n    }\n  };\n\n  handleAddRecord = e => {\n    e.preventDefault();\n\n    let newRec = {\n      date: new Date(this.refs.d.value),\n      open: Number.parseFloat(this.refs.o.value),\n      high: Number.parseFloat(this.refs.h.value),\n      low: Number.parseFloat(this.refs.l.value),\n      close: Number.parseFloat(this.refs.c.value),\n      volume: Number.parseFloat(this.refs.v.value)\n    };\n\n    this.setState({\n      json: [...this.state.json, newRec]\n    });\n  };\n\n  handleReset = () => {\n    this.setState({\n      json: [],\n      date: \"\",\n      open: 0,\n      high: 0,\n      low: 0,\n      close: 0,\n      dateCount: 1\n    });\n\n    this.componentDidMount();\n  };\n\n  nextDate = () => {\n    var today = new Date();\n    var nextDay = new Date();\n\n    nextDay.setDate(today.getDate() + this.state.dateCount);\n    var day = (\"0\" + nextDay.getDate()).slice(-2);\n    var month = (\"0\" + (nextDay.getMonth() + 1)).slice(-2);\n    var newDay = nextDay.getFullYear() + \"-\" + month + \"-\" + day;\n\n    // console.log(nextDay)\n    document.getElementById(\"date\").value = newDay;\n\n    this.setState({\n      dateCount: this.state.dateCount + 1\n    })\n  };\n\n  handleJsonUpdate = data => {\n    this.setState({\n      json: data\n    });\n  };\n\n  handleBadDay = () => {\n    let datalen = this.state.json.length;\n    if(datalen <= 0){\n      this.handleRandDay()\n    } \n    else {\n      var today = new Date(this.state.json[0].date);\n      var nextDay = new Date();\n      nextDay.setDate(today.getDate() + this.state.json.length);\n\n      let random = fc.randomFinancial().startDate(nextDay)(1)\n\n      while (random[0].close >= this.state.json[datalen-1].close){\n        random = fc.randomFinancial().startDate(nextDay)(1)\n      }\n\n      var badDay = this.state.json.concat(random)\n\n      this.setState({\n      json: badDay\n    });\n    }\n  };\n\n  handleGoodDay = () => {\n    let datalen = this.state.json.length;\n    if(datalen <= 0){\n      this.handleRandDay()\n    } \n    else {\n      var today = new Date(this.state.json[0].date);\n      var nextDay = new Date();\n      nextDay.setDate(today.getDate() + this.state.json.length);\n\n      let random = fc.randomFinancial().startDate(nextDay)(1)\n\n      while (random[0].close <= this.state.json[datalen-1].close){\n        random = fc.randomFinancial().startDate(nextDay)(1)\n      }\n\n      var goodDay = this.state.json.concat(random)\n\n      this.setState({\n      json: goodDay\n    });\n    }\n  };\n\n  render() {\n    return [\n         <div key=\"1\" id=\"left\">\n          <div id=\"Inputs\">\n            <h3>Controls</h3>\n            <hr />\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">Start Day</span>\n              </div>\n              <input\n                label=\"date\"\n                className=\"form-control\"\n                ref=\"d\"\n                type=\"date\"\n                id=\"date\"\n              />\n              <div className=\"input-group-append\">\n                <button className=\"btn btn-success\" onClick={this.nextDate}>\n                  >\n                </button>\n              </div>\n            </div><br />\n\n            <button\n              className=\"btn btn-outline-danger\"\n              onClick={this.handleBadDay}\n            >\n              Bad Day\n            </button> &nbsp; \n\n            <button\n              className=\"btn btn-outline-success\"\n              onClick={this.handleGoodDay}\n            >\n              Good Day\n            </button> &nbsp; \n\n\n            <br /><br />\n\n\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">Open</span>\n              </div>\n              <input ref=\"o\" className=\"form-control\" placeholder=\"0.00\" />\n            </div><br />\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">High</span>\n              </div>\n              <input ref=\"h\" className=\"form-control\" placeholder=\"0.00\" />\n            </div><br />\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">Low</span>\n              </div>\n              <input ref=\"l\" className=\"form-control\" placeholder=\"0.00\" />\n            </div><br />\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">Close</span>\n              </div>\n              <input ref=\"c\" className=\"form-control\" placeholder=\"0.00\" />\n            </div><br />\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">Volume</span>\n              </div>\n              <input ref=\"v\" className=\"form-control\" placeholder=\"0.00\" />\n            </div>\n\n          </div>\n\n          <div className=\"input-group buttons bottom\" id=\"Buttons\">\n            <button\n              className=\"btn btn-outline-primary\"\n              onClick={this.handleAddRecord}\n            >\n              Add\n            </button>{\" \"}\n            &nbsp;\n            <button\n              className=\"btn btn-outline-secondary\"\n              onClick={this.handleDelRecord}\n            >\n              Delete\n            </button>{\" \"}\n            &nbsp;\n            <button\n              className=\"btn btn-outline-success\"\n              onClick={this.handleRandDay}\n            >\n              Add Random\n            </button>{\" \"}\n            &nbsp;\n            <button\n              className=\"btn btn-outline-danger\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          </div>\n        </div>,    \n        <div key=\"2\" id=\"right\">\n          <Graph json={this.state.json} />\n          <JsonPreview json={this.state.json} update={this.handleJsonUpdate} />\n        </div>,\n       ];\n  }\n}\n","import React from 'react';\nimport Controls from './Controls'\n\nconst Container = () => {\n    return (\n      <div id=\"container\">\n        <Controls />\n      </div>\n    );\n}\n\nexport default Container;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Container from \"./Components/Container\";\n\nclass App extends React.Component {\n  render() {\n    return <Container />;\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}